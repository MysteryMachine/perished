;; Analyzed by ClojureScript 0.0-3165
{:use-macros nil, :excludes #{}, :name perished.core, :imports nil, :requires {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :uses nil, :defs {->t30792 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data meta30793])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name perished.core/->t30792, :variadic false, :file "src/perished/core.cljs", :method-params ([owner data meta30793]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag perished.core/t30792, :variadic false, :max-fixed-arity 3}), :line 13, :max-fixed-arity 3, :fn-var true, :arglists (quote ([owner data meta30793])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t30792 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name perished.core/t30792, :file "src/perished/core.cljs", :type true, :anonymous true, :column 5, :line 13, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:file "src/perished/core.cljs", :meta {:file nil, :end-column 15, :end-line 9, :column 6, :line 9}, :line 9, :column 1, :end-line 9, :end-column 15, :test true, :name perished.core/app-state}}, :require-macros {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :cljs.analyzer/constants {:order [:text :target], :seen #{:target :text}}, :doc nil}